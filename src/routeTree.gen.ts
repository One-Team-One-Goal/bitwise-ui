/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as RoadmapRouteImport } from './routes/roadmap'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as LoginRouteImport } from './routes/login'
import { Route as LessonRouteImport } from './routes/lesson'
import { Route as KarnaughMapsRouteImport } from './routes/karnaughMaps'
import { Route as DigitalCircuitRouteImport } from './routes/digitalCircuit'
import { Route as ConverterRouteImport } from './routes/converter'
import { Route as CalculatorRouteImport } from './routes/calculator'
import { Route as IndexRouteImport } from './routes/index'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const RoadmapRoute = RoadmapRouteImport.update({
  id: '/roadmap',
  path: '/roadmap',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LessonRoute = LessonRouteImport.update({
  id: '/lesson',
  path: '/lesson',
  getParentRoute: () => rootRouteImport,
} as any)
const KarnaughMapsRoute = KarnaughMapsRouteImport.update({
  id: '/karnaughMaps',
  path: '/karnaughMaps',
  getParentRoute: () => rootRouteImport,
} as any)
const DigitalCircuitRoute = DigitalCircuitRouteImport.update({
  id: '/digitalCircuit',
  path: '/digitalCircuit',
  getParentRoute: () => rootRouteImport,
} as any)
const ConverterRoute = ConverterRouteImport.update({
  id: '/converter',
  path: '/converter',
  getParentRoute: () => rootRouteImport,
} as any)
const CalculatorRoute = CalculatorRouteImport.update({
  id: '/calculator',
  path: '/calculator',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRoute
  '/converter': typeof ConverterRoute
  '/digitalCircuit': typeof DigitalCircuitRoute
  '/karnaughMaps': typeof KarnaughMapsRoute
  '/lesson': typeof LessonRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/roadmap': typeof RoadmapRoute
  '/signup': typeof SignupRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRoute
  '/converter': typeof ConverterRoute
  '/digitalCircuit': typeof DigitalCircuitRoute
  '/karnaughMaps': typeof KarnaughMapsRoute
  '/lesson': typeof LessonRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/roadmap': typeof RoadmapRoute
  '/signup': typeof SignupRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRoute
  '/converter': typeof ConverterRoute
  '/digitalCircuit': typeof DigitalCircuitRoute
  '/karnaughMaps': typeof KarnaughMapsRoute
  '/lesson': typeof LessonRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/roadmap': typeof RoadmapRoute
  '/signup': typeof SignupRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/calculator'
    | '/converter'
    | '/digitalCircuit'
    | '/karnaughMaps'
    | '/lesson'
    | '/login'
    | '/profile'
    | '/roadmap'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/calculator'
    | '/converter'
    | '/digitalCircuit'
    | '/karnaughMaps'
    | '/lesson'
    | '/login'
    | '/profile'
    | '/roadmap'
    | '/signup'
  id:
    | '__root__'
    | '/'
    | '/calculator'
    | '/converter'
    | '/digitalCircuit'
    | '/karnaughMaps'
    | '/lesson'
    | '/login'
    | '/profile'
    | '/roadmap'
    | '/signup'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CalculatorRoute: typeof CalculatorRoute
  ConverterRoute: typeof ConverterRoute
  DigitalCircuitRoute: typeof DigitalCircuitRoute
  KarnaughMapsRoute: typeof KarnaughMapsRoute
  LessonRoute: typeof LessonRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  RoadmapRoute: typeof RoadmapRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/roadmap': {
      id: '/roadmap'
      path: '/roadmap'
      fullPath: '/roadmap'
      preLoaderRoute: typeof RoadmapRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lesson': {
      id: '/lesson'
      path: '/lesson'
      fullPath: '/lesson'
      preLoaderRoute: typeof LessonRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/karnaughMaps': {
      id: '/karnaughMaps'
      path: '/karnaughMaps'
      fullPath: '/karnaughMaps'
      preLoaderRoute: typeof KarnaughMapsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/digitalCircuit': {
      id: '/digitalCircuit'
      path: '/digitalCircuit'
      fullPath: '/digitalCircuit'
      preLoaderRoute: typeof DigitalCircuitRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/converter': {
      id: '/converter'
      path: '/converter'
      fullPath: '/converter'
      preLoaderRoute: typeof ConverterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calculator': {
      id: '/calculator'
      path: '/calculator'
      fullPath: '/calculator'
      preLoaderRoute: typeof CalculatorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CalculatorRoute: CalculatorRoute,
  ConverterRoute: ConverterRoute,
  DigitalCircuitRoute: DigitalCircuitRoute,
  KarnaughMapsRoute: KarnaughMapsRoute,
  LessonRoute: LessonRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  RoadmapRoute: RoadmapRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
