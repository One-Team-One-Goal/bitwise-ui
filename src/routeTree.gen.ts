/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as RoadmapImport } from './routes/roadmap'
import { Route as ProfileImport } from './routes/profile'
import { Route as LoginImport } from './routes/login'
import { Route as LessonImport } from './routes/lesson'
import { Route as KarnaughMapsImport } from './routes/karnaughMaps'
import { Route as ConverterImport } from './routes/converter'
import { Route as CalculatorImport } from './routes/calculator'
import { Route as IndexImport } from './routes/index'


// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const RoadmapRoute = RoadmapImport.update({
  id: '/roadmap',
  path: '/roadmap',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LessonRoute = LessonImport.update({
  id: '/lesson',
  path: '/lesson',
  getParentRoute: () => rootRoute,
} as any)

const KarnaughMapsRoute = KarnaughMapsImport.update({
  id: '/karnaughMaps',
  path: '/karnaughMaps',
  getParentRoute: () => rootRoute,
} as any)

const ConverterRoute = ConverterImport.update({
  id: '/converter',
  path: '/converter',
  getParentRoute: () => rootRoute,
} as any)

const CalculatorRoute = CalculatorImport.update({
  id: '/calculator',
  path: '/calculator',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/calculator': {
      id: '/calculator'
      path: '/calculator'
      fullPath: '/calculator'
      preLoaderRoute: typeof CalculatorImport
      parentRoute: typeof rootRoute
    }
    '/converter': {
      id: '/converter'
      path: '/converter'
      fullPath: '/converter'
      preLoaderRoute: typeof ConverterImport
      parentRoute: typeof rootRoute
    }
    '/karnaughMaps': {
      id: '/karnaughMaps'
      path: '/karnaughMaps'
      fullPath: '/karnaughMaps'
      preLoaderRoute: typeof KarnaughMapsImport
      parentRoute: typeof rootRoute
    }
    '/lesson': {
      id: '/lesson'
      path: '/lesson'
      fullPath: '/lesson'
      preLoaderRoute: typeof LessonImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/roadmap': {
      id: '/roadmap'
      path: '/roadmap'
      fullPath: '/roadmap'
      preLoaderRoute: typeof RoadmapImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRoute
  '/converter': typeof ConverterRoute
  '/karnaughMaps': typeof KarnaughMapsRoute
  '/lesson': typeof LessonRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/roadmap': typeof RoadmapRoute
  '/signup': typeof SignupRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRoute
  '/converter': typeof ConverterRoute
  '/karnaughMaps': typeof KarnaughMapsRoute
  '/lesson': typeof LessonRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/roadmap': typeof RoadmapRoute
  '/signup': typeof SignupRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRoute
  '/converter': typeof ConverterRoute
  '/karnaughMaps': typeof KarnaughMapsRoute
  '/lesson': typeof LessonRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/roadmap': typeof RoadmapRoute
  '/signup': typeof SignupRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/calculator'
    | '/converter'
    | '/karnaughMaps'
    | '/lesson'
    | '/login'
    | '/profile'
    | '/roadmap'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/calculator'
    | '/converter'
    | '/karnaughMaps'
    | '/lesson'
    | '/login'
    | '/profile'
    | '/roadmap'
    | '/signup'
  id:
    | '__root__'
    | '/'
    | '/calculator'
    | '/converter'
    | '/karnaughMaps'
    | '/lesson'
    | '/login'
    | '/profile'
    | '/roadmap'
    | '/signup'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CalculatorRoute: typeof CalculatorRoute
  ConverterRoute: typeof ConverterRoute
  KarnaughMapsRoute: typeof KarnaughMapsRoute
  LessonRoute: typeof LessonRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  RoadmapRoute: typeof RoadmapRoute
  SignupRoute: typeof SignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CalculatorRoute: CalculatorRoute,
  ConverterRoute: ConverterRoute,
  KarnaughMapsRoute: KarnaughMapsRoute,
  LessonRoute: LessonRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  RoadmapRoute: RoadmapRoute,
  SignupRoute: SignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/calculator",
        "/converter",
        "/karnaughMaps",
        "/lesson",
        "/login",
        "/profile",
        "/roadmap",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/calculator": {
      "filePath": "calculator.tsx"
    },
    "/converter": {
      "filePath": "converter.tsx"
    },
    "/karnaughMaps": {
      "filePath": "karnaughMaps.tsx"
    },
    "/lesson": {
      "filePath": "lesson.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/roadmap": {
      "filePath": "roadmap.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
